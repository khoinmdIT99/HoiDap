@using Discuss.Models
@using LibraryNF.Helper

@{
    ViewBag.Title = "Admin";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}
@*Code mẫu*@
@*Code HTML (Bộ lọc - Bảng dữ liệu - Phân trang - Nút thêm mới)*@
<div class="row">
    <div class="col-xs-12">
        <div class="box form-horizontal">
            @*Bộ Lọc và nút thêm mới*@
            <div class="box-header">
                <label class="control-label col-sm-1" for="CategoryID">Tên danh mục:</label>
                <div class="col-sm-2">
                    <select id="CategoryID" class="form-control">
                        @{
                            DBM.GetList("sp_Category_GetAll", new { }, out List<CategoryModel> categoryModels);
                            foreach (var category in categoryModels)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>
                            }
                        }
                    </select>
                </div>
            </div>
            @*Bảng dữ liệu - Phân trang*@
            <div class="box-body">
                <div id="table-content">
                    @*Chứa HTML dạng bảng*@
                </div>
            </div>
        </div>
    </div>
</div>
@*Teamplace HTML Thêm mới/Sửa*@
<div id="InsertOrUpdate" class="form-horizontal display-none">
    <div class="form-group">
        <label class="control-label col-sm-3" for="cboCategoryIOU">Tên danh mục <b style="color: #ff0000;">*</b>:</label>
        <div class="col-sm-9">
            <select id="cboCategoryIOU" class="form-control">
                @{
                    DBM.GetList("sp_Category_GetAll", new { }, out List<CategoryModel> categoryModels1);
                    foreach (var category in categoryModels1)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-3" for="txtContent">Nội dung <b style="color: #ff0000;">*</b>:</label>
        <div class="col-sm-9">
            <div id="txtContent" class="form-control" style="width: 100%"></div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        //Hàm ở đây được chạy đầu tiên khi load trang
        LoadDataAsk();
    });
    function LoadDataAsk(pageSize) {//Số bản ghi của 1 trang
        if (pageSize == undefined) pageSize = 10;//Nếu không chọn thì mặc định
        window.objAjax.divLoading = "all";//loadding
        var url = CreateURL("/Admin/Ask/GetPagination", //{Controller}/{Action}
            {
                pageSize: pageSize,
                categoryId: $("#CategoryID").val() //Tham số bộ lọc
            });
        AjaxLoadPartial(url, window.objAjax,
            function (html) {//html chính là bảng dữ liệu và phân trang
                //Dữ liệu trả về OK
                $("#table-content").html(html);
                LoadSkill();
            });
    }

    function Update(userId, askId) {
        $('#txtContent').summernote({
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol']],
                ['view', ['fullscreen', 'codeview']]
            ],
            height: 100,
            tabsize: 2
        });
        //Bước 0: Gán Id cho nút (View: GetTable)
        //Bước 1: Lấy dữ liệu từ CSDL theo categoryId gán cho form InsertOrUpdate
        $.ajax({
            type: 'GET',//GET - POST - PUT - DELETE
            url: "/Admin/Ask/GetById?askId=" + askId, //Đường dẫn
            contentType: 'application/json; charset=utf-8',//Định nghĩa
            data: "",//Chuyển sang JSON
            dataType: "json",
            async: false,//async = true - đồng bộ, async = false - bất đồng bộ, Xem thêm tại: https://viblo.asia/p/ky-thuat-dong-bo-bat-dong-bo-trong-ajax-MgNeWXxEkYx
            success: function (data) {
                //Gán dữ liệu cho form
                $("#cboCategoryIOU").val(data.CategoryId);
                $("#txtContent").summernote("code", data.Content);
            },
            error: function (xhr, textStatus, errorThrown) {
                var message = xhr.responseText != undefined ? xhr.responseText : textStatus;
                console.log(message);
            }
        });
        //Bước 2: Hiển thị form InsertOrUpdate trên dialog
        ShowDialogInsertOrUpdate("InsertOrUpdate",
            function (thisID) {
                //Chỗ viết code xử lý khi bấm nút cập nhật
                $.ajax({
                    type: 'PUT',//GET - POST - PUT - DELETE
                    url: "/Admin/Ask/Update", //Đường dẫn
                    contentType: 'application/json; charset=utf-8',//Định nghĩa
                    data: JSON.stringify({
                        AskId: askId,
                        UserId: userId,
                        CategoryId: $("#cboCategoryIOU").val(),
                        Content: $("#txtContent").summernote('code')
                    }),//Chuyển sang JSON
                    dataType: "json",
                    async: false,//async = true - đồng bộ, async = false - bất đồng bộ, Xem thêm tại: https://viblo.asia/p/ky-thuat-dong-bo-bat-dong-bo-trong-ajax-MgNeWXxEkYx
                    success: function (data) {
                        //Sau khi Cập nhật thành công thì thực hiện đóng Dialog
                        $(thisID).dialog("close");
                        //Load lại dữ liệu bảng
                        LoadDataAsk();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        var message = xhr.responseText != undefined ? xhr.responseText : textStatus;
                        console.log(message);
                    }
                });
            }, 1000);
    }

    function DeleteAsk(askId) {
        //Bước 0: Gán Id cho nút (View: GetTable)
        //Bước 1: Thông báo có muốn xóa hay không?
        CoreConfirm("Đồng chí có chắc chắn muốn xóa <b>câu hỏi này hay không</b>?", "Xóa", 500, "Đồng ý",
            function (thisID) {
                //Gọi ajax đến API Xóa
                $.ajax({
                    type: 'DELETE',//GET - POST - PUT - DELETE
                    url: "/Admin/Ask/Delete?askId=" + askId, //Đường dẫn
                    contentType: 'application/json; charset=utf-8',//Định nghĩa
                    data: "",//Chuyển sang JSON
                    dataType: "json",
                    async: false,//async = true - đồng bộ, async = false - bất đồng bộ, Xem thêm tại: https://viblo.asia/p/ky-thuat-dong-bo-bat-dong-bo-trong-ajax-MgNeWXxEkYx
                    success: function (data) {
                        //Sau khi Xóa thành công thì thực hiện đóng Dialog
                        $(thisID).dialog("close");
                        //Load lại dữ liệu bảng
                        LoadDataAsk();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        var message = xhr.responseText != undefined ? xhr.responseText : textStatus;
                        console.log(message);
                    }
                });
            });
    }
</script>